version: '3'

services:
  auth-for-check-app:
    image: dipsomask/auth-for-check-app:nobuild
    ports:
      - "3333:3333"
    networks:
      - checker-network
    container_name: auth-for-check-app
    depends_on:
      - postgres-auth
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: postgres
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-auth:5432/${POSTGRES_DB}

  postgres-auth:
    image: postgres:latest
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=postgres
    volumes:
      - ./auth-servis/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg-data:/var/lib/postgresql/data
    ports:
      - "65100:5432"
    networks:
      - checker-network
    container_name: postgres-auth

  db:
    image: postgres:latest
    container_name: checker_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "65000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - checker-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: checker_backend
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    entrypoint: ["/bin/bash", "/app/entrypoint.sh"]
    networks:
      - checker-network
    
  web-server-node:
    build:
      context: .
      dockerfile: expres-server.dockerfile
    ports:
      - "3001:3001"
    networks:
      - checker-network
    container_name: web-server-node


networks:
  checker-network:

volumes:
  pg-data:
  postgres_data:
